{"version":3,"sources":["Card.js","Form.js","App.js","serviceWorker.js","index.js"],"names":["Type","name","className","toLowerCase","Ability","type","text","AttackCosts","cost","length","map","index","key","Attack","damage","CardHeader","subtype","hp","types","CardGeneral","category","height","weight","CardBody","ability","attacks","bodyClassName","attack","CardWeaknessResistance","element","value","CardWeaknessResistanceRetreat","weaknesses","resistances","retreatCost","firstWeakness","firstResistance","Card","props","typeClassName","description","TextField","id","label","long","row","onChange","TagName","htmlFor","e","target","rows","undefined","ALL_TYPES","titleize","string","substring","toUpperCase","TypeSelect","reducer","state","action","newState","set","object","path","Error","slice","Array","from","_","newAttack","i","AttackCost","total","colorless","onTotalChange","onColorlessChange","parseInt","Form","initialData","useReducer","dispatch","update","get","join","v","toString","useEffect","firstAttackCost","filter","x","console","log","App","useState","card","setCard","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.7a8f7380.chunk.js","sourcesContent":["import React from \"react\";\n\nimport \"./Card.css\";\n\nfunction Type({ name }) {\n  return <div className={`card__type card__type--${name.toLowerCase()}`} />;\n}\n\nfunction Ability({ type, name, text }) {\n  return (\n    <div className=\"card__ability\">\n      <div className=\"card__ability--header\">\n        <div className=\"card__ability--type\">{type}</div>\n        <div className=\"card__ability--name\">{name}</div>\n      </div>\n      <div className=\"card__ability--text\">{text}</div>\n    </div>\n  );\n}\n\nfunction AttackCosts({ cost = [] }) {\n  if (!cost || !cost.length) return null;\n\n  return (\n    <div className=\"card__attack--cost\">\n      {cost.map((type, index) => (\n        <div\n          key={index}\n          className={`card__attack--cost-type card__type--${type.toLowerCase()}`}\n        />\n      ))}\n    </div>\n  );\n}\n\nfunction Attack({ cost, name, damage, text }) {\n  return (\n    <div className=\"card__attack\">\n      <div className=\"card__attack--header\">\n        <AttackCosts cost={cost} />\n        <div className=\"card__attack--name\">{name}</div>\n        <div className=\"card__attack--damage\">{damage}</div>\n      </div>\n      {text && <div className=\"card__attack--text\">{text}</div>}\n    </div>\n  );\n}\n\nfunction CardHeader({ subtype, name, hp, types }) {\n  return (\n    <header className=\"card__header\">\n      <div className=\"card__subtype\">\n        <span className=\"card__subtype--pill\">{subtype}</span>\n      </div>\n      <div className=\"card__name\">{name}</div>\n      <div className=\"card__hp\">\n        <span className=\"card__hp--text\">HP</span>\n        <span className=\"card__hp--value\">{hp}</span>\n      </div>\n      <div className=\"card__types\">\n        {types.map((type) => (\n          <Type key={type} name={type} />\n        ))}\n      </div>\n    </header>\n  );\n}\n\nfunction CardGeneral({ category, height, weight }) {\n  return (\n    <div className=\"card__general\">\n      <div className=\"card__general--image\"></div>\n      <div className=\"card__general--info\">\n        {category} height: {height} weight: {weight}.\n      </div>\n    </div>\n  );\n}\n\nfunction CardBody({ ability, attacks }) {\n  const bodyClassName = ability\n    ? \"card__body card__body--with-ability\"\n    : \"card__body\";\n  return (\n    <div className={bodyClassName}>\n      {ability && <Ability {...ability} />}\n      {attacks &&\n        attacks.map((attack, index) => <Attack key={index} {...attack} />)}\n    </div>\n  );\n}\n\nfunction CardWeaknessResistance({ element, type, className }) {\n  return (\n    <div className=\"card__footer--item\">\n      {type}{\" \"}\n      {element && (\n        <>\n          <div\n            className={`card__type-small card__type--${element.type.toLowerCase()}`}\n          />\n          <div className=\"card__footer--value\">{element.value}</div>\n        </>\n      )}\n    </div>\n  );\n}\n\nfunction CardWeaknessResistanceRetreat({\n  weaknesses,\n  resistances,\n  retreatCost,\n}) {\n  const firstWeakness = weaknesses && weaknesses.length >= 1 && weaknesses[0];\n  const firstResistance =\n    resistances && resistances.length >= 1 && resistances[0];\n\n  return (\n    <div className=\"card__footer\">\n      <CardWeaknessResistance\n        type=\"weakness\"\n        element={firstWeakness}\n      />\n      <CardWeaknessResistance\n        type=\"resistance\"\n        element={firstResistance}\n      />\n      <div className=\"card__footer--item\">\n        retreat{\" \"}\n        {retreatCost &&\n          retreatCost.length > 0 &&\n          retreatCost.map((cost, index) => {\n            return (\n              <div\n                key={index}\n                className={`card__type-small card__type--${cost.toLowerCase()}`}\n              />\n            );\n          })}\n      </div>\n    </div>\n  );\n}\n\nexport default function Card(props) {\n  const { types } = props;\n  const typeClassName = `card ${types[0].toLowerCase()}`;\n  return (\n    <div className={typeClassName}>\n      <div className=\"card__container\">\n        <CardHeader\n          subtype={props.subtype}\n          name={props.name}\n          hp={props.hp}\n          types={types}\n        />\n        <CardGeneral\n          category={props.category}\n          height={props.height}\n          weight={props.weight}\n        />\n        <CardBody ability={props.ability} attacks={props.attacks} />\n        <CardWeaknessResistanceRetreat\n          weaknesses={props.weaknesses}\n          resistances={props.resistances}\n          retreatCost={props.retreatCost}\n        />\n        <div className=\"card__description\">{props.description}</div>\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect, useReducer } from \"react\";\n\nimport \"./Form.css\";\n\nfunction TextField({ id, label, value, long, row, onChange }) {\n  const TagName = long ? \"textarea\" : \"input\";\n  row = row ? row : 3;\n  return (\n    <div className={`field field__${id}`}>\n      <label htmlFor={id}>{label}</label>\n      <TagName\n        id={id}\n        name={id}\n        type=\"text\"\n        onChange={(e) => onChange(e.target.value)}\n        value={value}\n        rows={long ? row : undefined}\n      />\n    </div>\n  );\n}\n\nconst ALL_TYPES = [\n  \"colorless\",\n  \"darkness\",\n  \"dragon\",\n  \"fairy\",\n  \"fighting\",\n  \"fire\",\n  \"grass\",\n  \"lightning\",\n  \"metal\",\n  \"psychic\",\n  \"water\",\n];\n\nfunction titleize(string) {\n  if (string.length <= 0) return;\n  return (\n    string.substring(0, 1).toUpperCase() + string.substring(1).toLowerCase()\n  );\n}\n\nfunction TypeSelect({ id, label, value, onChange }) {\n  return (\n    <div className={`field field__${id}`}>\n      <label htmlFor={id}>{label}</label>\n      <select name={id} id={id} value={value} onChange={onChange}>\n        {ALL_TYPES.map((type) => (\n          <option key={type} value={type}>\n            {titleize(type)}\n          </option>\n        ))}\n      </select>\n    </div>\n  );\n}\n\nfunction set(object, path, value) {\n  if (object === undefined || path.length === 0)\n    throw new Error(\"set function was misused\");\n  if (path.length === 1) {\n    object[path[0]] = value;\n  } else {\n    set(object[path[0]], path.slice(1), value);\n  }\n}\n\nconst get = (object) => (path) => {\n  if (path.length === 0) return object;\n  return get(object[path[0]])(path.slice(1));\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"UPDATE\": {\n      const newState = { ...state };\n      set(newState, action.path, action.value);\n      return newState;\n    }\n    case \"UPDATE_TYPES\": {\n      const attacks = state.attacks.map((attack) => ({\n        ...attack,\n        cost: attack.cost.map((type) =>\n          type.toLowerCase() === \"colorless\" ? \"colorless\" : action.value\n        ),\n      }));\n      return { ...state, types: [action.value], attacks };\n    }\n    case \"UPDATE_ATTACK_COST_ALL\": {\n      if (action.index > state.attacks.length) return state;\n      const attacks = state.attacks.map((attack, index) => {\n        if (index !== action.index) return attack;\n        return {\n          ...attack,\n          cost: Array.from({ length: action.value }, (_) => state.types[0]),\n        };\n      });\n      return { ...state, attacks };\n    }\n    case \"UPDATE_ATTACK_COST_COLORLESS\": {\n      if (action.index > state.attacks.length) return state;\n      const attacks = state.attacks.map((attack, index) => {\n        if (index !== action.index) return attack;\n        const newAttack = { ...attack };\n        const cost = newAttack.cost;\n        const length = cost.length;\n        for (let i = 0; i < length; i++) {\n          cost[i] =\n            length - action.value - i > 0 ? state.types[0] : \"colorless\";\n        }\n        return newAttack;\n      });\n      return { ...state, attacks };\n    }\n    case \"UPDATE_WEAKNESS\": {\n      return { ...state, weaknesses: [{ type: action.value, value: \"×2\" }] };\n    }\n    default:\n      return state;\n  }\n};\n\nfunction AttackCost({ total, colorless, onTotalChange, onColorlessChange }) {\n  return (\n    <div className=\"field field__attacks-0-cost\">\n      <label htmlFor=\"cost-all\">Cost </label>\n      <select\n        name=\"cost-all\"\n        id=\"cost-all\"\n        value={total}\n        onChange={(e) => onTotalChange(parseInt(e.target.value))}\n      >\n        {Array.from({ length: 5 }, (_, index) => {\n          return (\n            <option key={index} value={index}>\n              {index}\n            </option>\n          );\n        })}\n      </select>\n      <label htmlFor=\"cost-colorless\">inc. normal </label>\n      <select\n        name=\"cost-colorless\"\n        id=\"cost-colorless\"\n        value={colorless}\n        onChange={(e) => onColorlessChange(parseInt(e.target.value))}\n      >\n        {Array.from({ length: total === 0 ? 0 : total + 1 }, (_, index) => {\n          return (\n            <option key={index} value={index}>\n              {index}\n            </option>\n          );\n        })}\n      </select>\n    </div>\n  );\n}\n\nexport default function Form({ initialData, onChange }) {\n  /* text */\n  const [state, dispatch] = useReducer(reducer, initialData);\n\n  const update = (path) => (value) => dispatch({ type: \"UPDATE\", path, value });\n  const value = get(state);\n\n  const text = (path, long, label, row) => (\n    <TextField\n      id={path.join(\"-\")}\n      label={label || path.map((v) => titleize(v.toString())).join(\" \")}\n      value={value(path)}\n      onChange={update(path)}\n      long={long}\n      row={row}\n    />\n  );\n\n  useEffect(() => {\n    onChange({\n      ...initialData,\n      ...state,\n    });\n  }, [initialData, state, onChange]);\n\n  const firstAttackCost = state.attacks[0].cost;\n  const cost = {\n    total: firstAttackCost.length,\n    colorless: firstAttackCost.filter((x) => x.toLowerCase() === \"colorless\")\n      .length,\n  };\n\n  return (\n    <form className=\"form\">\n      <div className=\"group\">\n        {text([\"name\"])}\n        {text([\"hp\"], false, \"HP\")}\n        <TypeSelect\n          id=\"types\"\n          label=\"Type\"\n          value={state.types[0].toLowerCase()}\n          onChange={(e) =>\n            dispatch({ type: \"UPDATE_TYPES\", value: e.target.value })\n          }\n        />\n      </div>\n      <div className=\"group\">\n        {text([\"category\"])}\n        {text([\"height\"])}\n        {text([\"weight\"])}\n      </div>\n      <div className=\"group\">\n        {text([\"ability\", \"name\"])}\n        {text([\"ability\", \"text\"], true)}\n      </div>\n      <div className=\"group\">\n        {text([\"attacks\", 0, \"name\"], false, \"Attacks Name\")}\n        {text([\"attacks\", 0, \"text\"], true, \"Attacks Text\")}\n        <AttackCost\n          total={cost.total}\n          colorless={cost.colorless}\n          onTotalChange={(value) =>\n            dispatch({\n              type: \"UPDATE_ATTACK_COST_ALL\",\n              index: 0,\n              value,\n            })\n          }\n          onColorlessChange={(value) =>\n            dispatch({\n              type: \"UPDATE_ATTACK_COST_COLORLESS\",\n              index: 0,\n              value,\n            })\n          }\n        />\n        {text([\"attacks\", 0, \"damage\"], false, \"Attacks Damage\")}\n      </div>\n      <div className=\"group\">\n        <TypeSelect\n          id=\"weaknesses\"\n          label=\"Weakness\"\n          value={state.weaknesses[0].type.toLowerCase()}\n          onChange={(e) =>\n            dispatch({\n              type: \"UPDATE\",\n              path: [\"weaknesses\"],\n              value: [{ type: e.target.value, value: \"×2\" }],\n            })\n          }\n        />\n        <TypeSelect\n          id=\"resistances\"\n          label=\"Resistance\"\n          value={state.resistances[0].type.toLowerCase()}\n          onChange={(e) => {\n            console.log(e.target.value);\n            dispatch({\n              type: \"UPDATE\",\n              path: [\"resistances\"],\n              value: [{ type: e.target.value, value: \"-20\" }],\n            });\n          }}\n        />\n        <div className={`field field__retreatCost`}>\n          <label htmlFor=\"retreatCost\">Retreat cost </label>\n          <select\n            name=\"retreatCost\"\n            id=\"retreatCost\"\n            value={state.retreatCost.length}\n            onChange={(e) =>\n              dispatch({\n                type: \"UPDATE\",\n                path: [\"retreatCost\"],\n                value: Array.from(\n                  { length: parseInt(e.target.value) },\n                  () => \"colorless\"\n                ),\n              })\n            }\n          >\n            {Array.from({ length: 5 }, (_, index) => {\n              return (\n                <option key={index} value={index}>\n                  {index}\n                </option>\n              );\n            })}\n          </select>\n        </div>\n      </div>\n      <div className=\"group\">\n        {text([\"description\"], true, \"Description\", 2)}\n      </div>\n    </form>\n  );\n}\n","import React, { useState } from \"react\";\nimport Card from \"./Card\";\nimport Form from \"./Form\";\n\nimport initialData from \"./data/card.json\";\n\nimport \"./App.css\";\n\nfunction App() {\n  const [card, setCard] = useState(initialData);\n\n  return (\n    <div className=\"app\">\n      <Card {...card} />\n      <Form initialData={initialData} onChange={setCard} />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}